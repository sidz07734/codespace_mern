name: Test Suite

on:
  push:
    branches: [ main, develop, 'feature/**' ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]
        mongodb-version: ['6.0', '7.0']
    
    services:
      mongodb:
        image: mongo:${{ matrix.mongodb-version }}
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: |
          backend/package-lock.json
          frontend/package-lock.json
    
    - name: Install backend dependencies
      working-directory: ./backend
      run: npm ci
    
    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm ci
    
    - name: Run backend linting
      working-directory: ./backend
      run: npm run lint
    
    - name: Run backend tests
      working-directory: ./backend
      env:
        NODE_ENV: test
        MONGODB_URI: mongodb://localhost:27017/codespace_test
        JWT_SECRET: test_secret_key
        JWT_EXPIRE: 1h
      run: |
        npm run test:ci
    
    - name: Run frontend tests
      working-directory: ./frontend
      run: |
        npm test -- --coverage --watchAll=false
    
    - name: Upload backend coverage
      uses: actions/upload-artifact@v3
      with:
        name: backend-coverage-${{ matrix.node-version }}-${{ matrix.mongodb-version }}
        path: backend/coverage/
    
    - name: Upload frontend coverage
      uses: actions/upload-artifact@v3
      with:
        name: frontend-coverage-${{ matrix.node-version }}
        path: frontend/coverage/
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./backend/coverage/lcov.info,./frontend/coverage/lcov.info
        flags: backend,frontend
        name: codecov-${{ matrix.node-version }}-${{ matrix.mongodb-version }}
    
    - name: Check coverage thresholds
      working-directory: ./backend
      run: |
        COVERAGE=$(cat coverage/coverage-summary.json | jq '.total.lines.pct')
        echo "Total coverage: ${COVERAGE}%"
        if (( $(echo "$COVERAGE < 70" | bc -l) )); then
          echo "Coverage is below 70%!"
          exit 1
        fi

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: test
    
    services:
      mongodb:
        image: mongo:7.0
        ports:
          - 27017:27017
      
      ollama:
        image: ollama/ollama:latest
        ports:
          - 11434:11434

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
    
    - name: Install dependencies
      working-directory: ./backend
      run: npm ci
    
    - name: Pull Ollama model
      run: |
        curl -X POST http://localhost:11434/api/pull -d '{"name": "codellama:7b"}'
        # Wait for model to be ready
        sleep 30
    
    - name: Run integration tests
      working-directory: ./backend
      env:
        NODE_ENV: test
        MONGODB_URI: mongodb://localhost:27017/codespace_test
        JWT_SECRET: test_secret_key
        OLLAMA_URL: http://localhost:11434
      run: |
        npm test -- --testPathPattern="integration" --coverage

  e2e-test:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: test
    
    services:
      mongodb:
        image: mongo:7.0
        ports:
          - 27017:27017

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        cd backend && npm ci
        cd ../frontend && npm ci
    
    - name: Build frontend
      working-directory: ./frontend
      run: npm run build
    
    - name: Start backend server
      working-directory: ./backend
      env:
        NODE_ENV: production
        MONGODB_URI: mongodb://localhost:27017/codespace_test
        JWT_SECRET: test_secret_key
      run: |
        npm start &
        sleep 5
    
    - name: Run E2E tests
      working-directory: ./frontend
      run: |
        # Add your E2E test command here
        # npm run test:e2e
        echo "E2E tests placeholder"
    
    - name: Stop services
      if: always()
      run: |
        pkill -f "node server.js" || true